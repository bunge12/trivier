{"version":3,"sources":["images/quiz.svg","service/socket.js","components/TextInput.jsx","components/Button.jsx","components/WaitingRoom.jsx","components/GameInfo.jsx","components/SingleOption.jsx","components/Question.jsx","components/ScoreBoard.jsx","components/Notification.jsx","App.js","index.js"],"names":["module","exports","socket","io","Field","styled","input","TextInput","props","useState","value","setValue","type","placeholder","onChange","event","target","callback","Styled","button","Button","onClick","text","List","ul","Item","li","WaitingRoom","listItems","players","map","each","index","key","name","Container","div","span","GameInfo","room","Option","Wrong","Correct","SingleOption","status","setStatus","textArea","document","createElement","innerHTML","decodeHTMLEntities","useEffect","showCorrect","answerIndex","check","innerText","winner","disabled","Text","Options","Timer","Question","answers","data","question","correct_answer","all_answers","setShowCorrect","setDisabled","counter","setCounter","indexOf","timer","setInterval","clearInterval","checkWinner","answer","score","list","ScoreBoard","sort","a","b","Notification","Title","Image","img","Link","App","searchGameId","setSearchGameId","currentGameId","setCurrentGameId","setName","userId","setUserId","mode","setMode","admin","setAdmin","gameData","setGameData","notification","setNotification","currentQuestion","setCurrentQuestion","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","on","roomId","message","setTimeout","questions","count","saveName","className","src","quiz","alt","emit","code","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.61a64b78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quiz.b23ea208.svg\";","import io from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:8001\";\n\nexport const socket = io(ENDPOINT);\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Field = styled.input`\n  background: none;\n  padding: 1em;\n  border: 1px solid #0075c7;\n  border-radius: 1em;\n  margin-top: 0.5vh;\n  margin-bottom: 0.5vh;\n  color: #0075c7;\n  width: 50%;\n  :focus {\n    outline: none;\n  }\n`;\n\nexport default function TextInput(props) {\n  const [value, setValue] = useState(\"\");\n  const saveValue = (event) => {\n    setValue(event.target.value);\n    props.callback(event.target.value);\n  };\n  return (\n    <Field\n      type=\"text\"\n      placeholder={props.placeholder}\n      value={value}\n      onChange={saveValue}\n    ></Field>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Styled = styled.button`\n  background: none;\n  padding: 1em;\n  border: 1px solid #0075c7;\n  border-radius: 1em;\n  margin-top: 0.5vh;\n  margin-bottom: 0.5vh;\n  color: #0075c7;\n  width: 50%;\n  :focus {\n    outline: none;\n  }\n`;\n\nexport default function Button(props) {\n  return <Styled onClick={props.callback}>{props.text}</Styled>;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst List = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  margin-bottom: 3vh;\n`;\nconst Item = styled.li`\n  background: none;\n  color: rgb(29, 54, 92);\n  border: 1px solid rgb(29, 54, 92);\n  padding: 0.25rem;\n  border-radius: 0.5rem;\n  margin: 0.25rem;\n  text-align: center;\n  width: 50%;\n  display: inline-block;\n`;\n\nexport default function WaitingRoom(props) {\n  const listItems = props.players.map((each, index) => (\n    <Item key={index}>{each.name}</Item>\n  ));\n\n  return <List>{listItems}</List>;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 1vh;\n  margin-bottom: 1vh;\n  color: #0075c7;\n`;\n\nconst Item = styled.span`\n  font-weight: 600;\n  color: #0075c7;\n`;\n\nexport default function GameInfo(props) {\n  return (\n    <Container>\n      <Item>Room Code: {props.room}</Item>\n      {/* <Item>{props.name}</Item> */}\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Option = styled.button`\n  background: none;\n  padding: 1em;\n  border: 1px solid #0075c7;\n  border-radius: 1em;\n  margin-top: 0.5vh;\n  margin-bottom: 0.5vh;\n  color: #0075c7;\n  width: 40%;\n  :focus {\n    outline: none;\n  }\n`;\nconst Wrong = styled.button`\n  background: rgb(235, 129, 130);\n  border: 1px solid rgb(235, 129, 130);\n  padding: 1em;\n  border-radius: 1em;\n  margin-top: 0.5vh;\n  margin-bottom: 0.5vh;\n  color: white;\n  width: 40%;\n  font-weight: bold;\n  :focus {\n    outline: none;\n  }\n`;\nconst Correct = styled.button`\n  background: rgb(95, 192, 136);\n  padding: 1em;\n  border: 1px solid rgb(95, 192, 136);\n  border-radius: 1em;\n  margin-top: 0.5vh;\n  margin-bottom: 0.5vh;\n  color: white;\n  width: 40%;\n  font-weight: bold;\n  :focus {\n    outline: none;\n  }\n`;\n\nexport default function SingleOption(props) {\n  const [status, setStatus] = useState(0); // 0 = not answered, 1 = correct, 2 = incorrect\n  const decodeHTMLEntities = (text) => {\n    var textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = text;\n    return textArea.value;\n  };\n  const text = decodeHTMLEntities(props.text);\n  useEffect(() => {\n    if (props.showCorrect === props.answerIndex) {\n      setStatus(1);\n    }\n  }, [props.showCorrect, props.answerIndex]);\n  const check = (event) => {\n    props.callback(event.target.innerText);\n    if (event.target.innerText === props.winner) {\n      setStatus(1);\n    } else {\n      setStatus(2);\n    }\n  };\n  return (\n    <>\n      {status === 0 && (\n        <Option onClick={check} disabled={props.disabled}>\n          {text}\n        </Option>\n      )}\n      {status === 1 && (\n        <Correct onClick={check} disabled={props.disabled}>\n          {text}\n        </Correct>\n      )}\n      {status === 2 && (\n        <Wrong onClick={check} disabled={props.disabled}>\n          {text}\n        </Wrong>\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport SingleOption from \"./SingleOption\";\n\nconst Container = styled.div`\n  margin-top: 3vh;\n`;\nconst Text = styled.div``;\nconst Options = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n  margin-top: 5vh;\n`;\nconst Timer = styled.div`\n  text-align: center;\n  margin-top: 3vh;\n`;\n\nexport default function Question(props) {\n  const { question, correct_answer, all_answers, type } = props.data;\n  const [showCorrect, setShowCorrect] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const [counter, setCounter] = useState(5);\n\n  let answers;\n  if (type === \"multiple\") {\n    answers = all_answers;\n  }\n  if (type === \"boolean\") {\n    answers = [\"True\", \"False\"];\n  }\n\n  useEffect(() => {\n    if (counter < 1) {\n      setShowCorrect(answers.indexOf(correct_answer));\n      setDisabled(true);\n    }\n    const timer =\n      counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter, answers, correct_answer]);\n\n  const checkWinner = (answer) => {\n    // answer === correct_answer ? console.log(\"YES\") : console.log(\"NO\");\n    if (answer === correct_answer) {\n      // inform App\n      props.score();\n      setDisabled(true);\n    } else {\n      setShowCorrect(answers.indexOf(correct_answer));\n      setDisabled(true);\n    }\n  };\n\n  const decodeHTMLEntities = (text) => {\n    var textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = text;\n    return textArea.value;\n  };\n  const list = answers.map((each, index) => (\n    <SingleOption\n      key={each}\n      callback={checkWinner}\n      text={each}\n      winner={correct_answer}\n      showCorrect={showCorrect}\n      answerIndex={index}\n      disabled={disabled}\n    ></SingleOption>\n  ));\n  return (\n    <Container>\n      <Text>{decodeHTMLEntities(question)}</Text>\n      <Options>{list}</Options>\n      <Timer>00:{counter > 9 ? counter : \"0\" + counter}</Timer>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst List = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n`;\nconst Item = styled.li`\n  background: none;\n  color: rgb(29, 54, 92);\n  border: 1px solid rgb(29, 54, 92);\n  padding: 0.25rem;\n  border-radius: 0.5rem;\n  margin: 0.25rem;\n  text-align: center;\n  width: 50%;\n  display: inline-block;\n`;\n\nexport default function ScoreBoard(props) {\n  const listItems = props.players\n    .sort((a, b) => b.score - a.score)\n    .map((each, index) => (\n      <Item key={index}>\n        {each.name} - {each.score}\n      </Item>\n    ));\n\n  return <List>{listItems}</List>;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  color: ${(props) => (props.type === \"error\" ? \"#856404\" : \"#155724\")};\n  background-color: ${(props) =>\n    props.type === \"error\" ? \"#fff3cd\" : \"#d4edda\"};\n  position: relative;\n  padding: 0.75rem 1.25rem;\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n  border: 1px solid transparent;\n  border-color: ${(props) => (props.type === \"error\" ? \"#ffeeba\" : \"#c3e6cb\")};\n  border-radius: 0.25rem;\n`;\n\nexport default function Notification(props) {\n  return <Container type={props.type}>{props.text}</Container>;\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { socket } from \"./service/socket\";\nimport TextInput from \"./components/TextInput\";\nimport Button from \"./components/Button\";\nimport WaitingRoom from \"./components/WaitingRoom\";\nimport GameInfo from \"./components/GameInfo\";\nimport Question from \"./components/Question\";\nimport ScoreBoard from \"./components/ScoreBoard\";\nimport Notification from \"./components/Notification\";\nimport quiz from \"./images/quiz.svg\";\n\nconst WELCOME = \"WELCOME\"; // Welcome Screen\nconst NEW = \"NEW\"; // Create new Room\nconst JOIN = \"JOIN\"; // Join Existing Room\nconst NAME = \"NAME\"; // Add name to existing room\nconst WAITING = \"WAITING\"; // Waiting Room\nconst PLAY = \"PLAY\"; // Questions\nconst SCOREBOARD = \"SCOREBOARD\"; // Score Board\nconst NOTIF_TIMEOUT = 4000; // in ms\n\nconst Title = styled.div`\n  font-family: \"Luckiest Guy\", cursive;\n  margin-bottom: 1vh;\n  font-size: xx-large;\n  color: #22c1c3;\n`;\nconst Image = styled.img`\n  width: 75%;\n  margin: 2rem;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Link = styled.span`\n  color: #1d365c;\n  font-size: x-small;\n  text-decoration: none;\n`;\n\n// Helper Functions\nconst generateId = (length) => {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNPQRSTUVWXYZ123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nfunction App() {\n  const [searchGameId, setSearchGameId] = useState(null);\n  const [currentGameId, setCurrentGameId] = useState(null);\n  const [name, setName] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [mode, setMode] = useState(WELCOME);\n  const [admin, setAdmin] = useState(false);\n  const [gameData, setGameData] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n\n  // Socket.io listeners\n  useEffect(() => {\n    setUserId(generateId(6));\n    socket.on(\"roomFound\", (roomId) => {\n      setNotification(\n        { type: \"success\", message: `Joined room ${roomId}` },\n        setTimeout(() => {\n          setNotification(null);\n        }, NOTIF_TIMEOUT)\n      );\n      setCurrentGameId(roomId);\n      setMode(NAME);\n    });\n    socket.on(\"roomNotFound\", () => {\n      setNotification(\n        { type: \"error\", message: \"Room not found!\" },\n        setTimeout(() => {\n          setNotification(null);\n        }, NOTIF_TIMEOUT)\n      );\n    });\n    socket.on(\"waitingToStart\", (data, admin) => {\n      setGameData(data);\n      setCurrentGameId(data[0].room);\n      setMode(WAITING);\n      admin && setAdmin(true);\n      setCurrentQuestion(data[0].questions[0]);\n    });\n    socket.on(\"someoneLeft\", (data) => {\n      setGameData(data);\n    });\n    socket.on(\"gameStarted\", () => {\n      setMode(PLAY);\n    });\n    socket.on(\"nextQuestion\", (data, count) => {\n      setCurrentQuestion(data[0].questions[count + 1]);\n    });\n    socket.on(\"gameOver\", (data) => {\n      setGameData(data);\n      setMode(SCOREBOARD);\n    });\n    socket.on(\"gameEnded\", () => {\n      setNotification(\n        { type: \"error\", message: \"Game Ended since the admin left!\" },\n        setTimeout(() => {\n          setNotification(null);\n        }, NOTIF_TIMEOUT)\n      );\n      setMode(WELCOME);\n      setCurrentGameId(null);\n    });\n    socket.on(\"serverError\", () => {\n      setNotification(\n        { type: \"error\", message: \"Server Error\" },\n        setTimeout(() => {\n          setNotification(null);\n        }, NOTIF_TIMEOUT)\n      );\n      setMode(WELCOME);\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  // App State modifiers\n  const searchRoom = (code) => {\n    setSearchGameId(code);\n  };\n  const saveName = (name) => {\n    setName(name);\n  };\n\n  // Socket Actions\n  const getGame = () => {\n    socket.emit(\"searchGame\", searchGameId);\n  };\n  const newGame = () => {\n    socket.emit(\"newGame\", name, userId);\n  };\n  const addToGame = () => {\n    socket.emit(\"addToGame\", currentGameId, name, userId);\n  };\n  const startGame = () => {\n    socket.emit(\"startGame\", currentGameId);\n  };\n  const recordScore = () => {\n    socket.emit(\"recordScore\", currentGameId, userId);\n  };\n  const playAgain = () => {\n    socket.emit(\"playAgain\", currentGameId);\n  };\n  const leaveRoom = () => {\n    setMode(WELCOME);\n    setCurrentGameId(null);\n    socket.emit(\"leaveRoom\", currentGameId, userId, admin);\n  };\n\n  return (\n    <div className=\"App\">\n      <Title>Trivier</Title>\n      {currentGameId && <GameInfo name={name} room={currentGameId}></GameInfo>}\n      {mode === WELCOME && (\n        <>\n          <Image src={quiz} alt=\"drawing of an online quiz\" />\n          <p>\n            Play online trivia with your friends! Create or join an existing\n            room and compete with your friends wherever they are!\n          </p>\n          <Button text=\"New Game\" callback={() => setMode(NEW)}></Button>\n          <br />\n          <Button text=\"Join Game\" callback={() => setMode(JOIN)}></Button>\n        </>\n      )}\n      {mode === NEW && (\n        <>\n          <TextInput\n            placeholder=\"Enter Your Name\"\n            callback={saveName}\n          ></TextInput>\n          <br />\n          <Button text=\"Create room\" callback={newGame}></Button>\n        </>\n      )}\n      {mode === JOIN && (\n        <>\n          <TextInput\n            placeholder=\"Enter Room Code\"\n            callback={searchRoom}\n          ></TextInput>\n          <br />\n          <Button text=\"Find room\" callback={getGame}></Button>\n          <br />\n          <Link\n            onClick={() => {\n              setMode(WELCOME);\n            }}\n          >\n            Go Back\n          </Link>\n        </>\n      )}\n      {mode === NAME && (\n        <>\n          <TextInput\n            placeholder=\"Enter Your Name\"\n            callback={saveName}\n          ></TextInput>\n          <br />\n          <Button text=\"Join room\" callback={addToGame}></Button>\n        </>\n      )}\n      {mode === WAITING && (\n        <>\n          <br />\n          Waiting room:\n          <WaitingRoom players={gameData[0].players} />\n          <Button text=\"Start Game\" callback={startGame}></Button>\n          {/* {admin && gameData[0].players.length > 1 && (\n            <Button text=\"Start Game\" callback={startGame}></Button>\n          )}\n          <br />\n          {admin &&\n            gameData[0].players.length === 1 &&\n            \"Waiting for other players to join...\"} */}\n        </>\n      )}\n      {mode === PLAY && (\n        <>\n          {\n            <Question\n              key={currentQuestion.question}\n              data={currentQuestion}\n              score={recordScore}\n            ></Question>\n          }\n        </>\n      )}\n      {mode === SCOREBOARD && (\n        <>\n          <ScoreBoard players={gameData[0].players} />\n          <br />\n          {admin && <Button text=\"Play Again\" callback={playAgain}></Button>}\n          <br />\n          <Link onClick={leaveRoom}>End Game</Link>\n        </>\n      )}\n      {notification && (\n        <Notification type={notification.type} text={notification.message} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}